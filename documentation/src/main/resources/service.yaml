openapi: 3.0.0
info:
  title: Kithugs
  description: API description for KITHUGS.
  version: "1.0.0"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: KITHUGS
    description: KITHUGS related API's

servers:
  - url: '{protocol}://{environment}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost # Docker-compose setup
        default: localhost # Development
      port:
        enum:
          - 8080
        default: 8080
paths:
  /v1/hello:
    post:
      tags:
        - KITHUGS
      summary: Call the thugs service
      description: Post your name and get some hugs or meet some thugs.
      requestBody:
        description: Your name
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/helloRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helloResponse'

  /v1/patients:
    post:
      tags:
        - patients
      summary: Create patient
      description: Create a new patient
      requestBody:
        description: A new patient.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPatient'
      responses:
        '201':
          description: The patient is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patient'
        '401':
          $ref: '#/components/responses/401'
    get:
      tags:
        - patients
      summary: get patients
      description: Request a list of patients.
      parameters:
        - in: query
          name: given
          description: Search patients by given name
          required: false
          schema:
            type: string
        - in: query
          name: family
          description: Search patients by family name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patients'

  /v1/careteams:
    get:
      tags:
        - organization
      summary: get careteams
      description: Request a list of careteams.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CareTeams'

  /v1/patients/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: the uuid corresponding to the patient of interest
    get:
      tags:
        - patients
      summary: get patient
      description: Request a patient by id.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patient'
#    delete:
#      tags:
#        - patients
#      summary: delete patient
#      description: Delete a patient by id.
#      parameters:
#        - in: path
#          name: id
#          required: true
#          schema:
#            type: string
#          description: the uuid corresponding to the patient that is to be deleted
#      responses:
#        '200':
#          description: Ok
#    put:
#      tags:
#        - patients
#      summary: update patient
#      description: Update a patient by id.
#      parameters:
#        - in: path
#          name: id
#          required: true
#          schema:
#            type: string
#          description: the uuid corresponding to the patient that is to be deleted
#      requestBody:
#        description: A patient
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/createPatient'
#      responses:
#        '200':
#          description: Ok
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/patient'

components:
  responses:
    '400':
      description: "Bad Request. This could be because: * One of the required parameters/properties are missing or is empty <br> * Length of input is exceeding maximum length <br> (See a possible detailed error message in the in the response.)"
    '401':
      description: "Unauthorized. This could be because: <br> * The calling system has not been properly authenticated."
    '403':
      description: "Forbidden. This could be because: <br> * The requested information does not belong the organisation of the user <br> * The calling user does not have the required roles"
  schemas:
    helloResponse:
      type: object
      required:
        - name
        - now
      properties:
        name:
          description: Your name
          type: string
          example: "John Doe"
        now:
          description: Time request was received
          type: string
          format: date-time
        i_can_be_null:
          type: string
          nullable: true

    CareTeams:
      type: array
      items:
        $ref: '#/components/schemas/CareTeam'

    CareTeam:
      type: object
      properties:
        uuid:
          description: an uuid identifying the careteam
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          description: the name of the careteam
          type: string
          example: "Careteam A Grp6"
        status:
          description: the status of the careteam
          type: string
          example: "active"

    patients:
      type: array
      items:
        $ref: '#/components/schemas/patient'

    patient:
      type: object
      properties:
        uuid:
          description: an uuid identifying the patient
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        firstName:
          description: the patients firstname
          type: string
          example: "Joe"
        lastName:
          description: the patients lastname
          type: string
          example: "Dow"
        cpr:
          description: CPR
          type: string

    createPatient:
      type: object
      properties:
        firstName:
          description: the patients firstname
          type: string
          example: "Joe"
        lastName:
          description: the patients lastname
          type: string
          example: "Dow"




    helloRequest:
      type: object
      required:
        - name
      properties:
        name:
          description: Your name
          type: string
          example: "John Doe"
          maxLength: 8
